name: Docker Image CI

on:
  pull_request:  
    branches:
      - master
  workflow_dispatch:
  push:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.event.repository.name }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Get latest Docker image version from GHCR
      id: get_image_version
      run: |
        TOKEN=${{ secrets.GHCR_TOKEN }}
        IMAGE_NAME=${{ env.IMAGE_NAME }}
        IMAGE_VERSION=$(curl -s -H "Authorization: Bearer $TOKEN" -H "Accept: application/vnd.github.v3+json" "https://api.github.com/user/packages/container/$IMAGE_NAME/versions" | jq -r '.[0].name')
        echo "Latest Docker image version in GHCR: $IMAGE_VERSION"

    - name: Check if the version in pip is newer than the latest tagged package in the repo, if there is a new version, build the image, else complete the workflow
      id: check_version
      run: |
        echo "Latest Docker image version in GHCR: $IMAGE_VERSION"
        PIP_VERSION=$(pip show autogen-studio | grep Version | cut -d ' ' -f2)
        echo "Latest version in pip: $PIP_VERSION"
        if [ "$PIP_VERSION" != "$IMAGE_VERSION" ]; then
          BUILD_IMAGE=true
        else
          BUILD_IMAGE=false
        fi
        echo "Build image: $BUILD_IMAGE"

    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag autogen-studio:$LATEST_VERSION --build-arg REPO_URL=https://github.com/${{ github.repository }}
    
    - name: Login to the Container registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3.1.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}
    
    - name: Upload the Docker image to the Container registry
      if: github.event_name != 'pull_request'
      id: push
      uses: mr-smithers-excellent/docker-build-push@v6.4
      with:
        image: ${{ env.IMAGE_NAME }}
        addLatest: true
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}
